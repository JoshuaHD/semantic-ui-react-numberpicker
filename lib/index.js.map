{"version":3,"sources":["../src/index.js"],"names":["DECREASE_VALUE","INCREASE_VALUE","NumberPicker","createClass","getDefaultProps","placeholder","id","min","max","maxLength","step","required","basic","circular","compact","classname_button_minus","classname_button_plus","classname_outer_input","classname_inner_input","propTypes","name","PropTypes","string","isRequired","value","any","onChange","func","number","bool","getInitialState","touched","buffer","handleAction","event","v","actionFilter","currentTarget","currentValue","replace","setVal","isFinite","parseFloat","props","stepSize","parsedVal","state","lastChar","charAt","length","returnValue","precision","Math","floor","setTimeout","validateInput","target","style","default","input","borderRadius","textAlign","buttonLeft","borderTopRightRadius","borderBottomRightRadius","margin","buttonRight","borderTopLeftRadius","borderBottomLeftRadius","marginRight","marginLeft","render","display"],"mappings":"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","file":"index.js","sourcesContent":["import React, {\n    Component\n} from \"react\";\nimport {\n    render\n} from 'react-dom'\nimport _ from \"lodash\";\nimport {\n    Button,\n    Form,\n    Input\n} from \"semantic-ui-react\";\n\n\nexport const DECREASE_VALUE = 'DECREASE_VALUE';\nexport const INCREASE_VALUE = 'INCREASE_VALUE';\n\n/*\n USAGE EXAMPLES:\n <Form.Field inline control={NumberPicker} name={MULTIPLY_INPUT + \".times\"} onChange={this.triggerChange} label=\"Copies to create\" defaultValue={1} min={1} max={999} placeholder=\"Repeat ...\" />\n <Form.Field width=\"8\" control={NumberPicker} compact label=\"compact buttons\" placeholder=\"Enter a number\" defaultValue={6} min={-41} max={45} step={1} />\n <Form.Field width=\"8\" control={NumberPicker} circular label=\"circular buttons\" placeholder=\"Enter a number\" defaultValue={6} min={-41} max={45} step={1} />\n <Form.Field width=\"8\" control={NumberPicker} basic label=\"basic buttons\" placeholder=\"Enter a number\" defaultValue={4} min={-40} max={40} step={2} />\n\n*/\nconst NumberPicker = React.createClass({\n    getDefaultProps: function () {\n        return {\n            placeholder: \"Enter a number\",\n            id: \"\",\n            /*\n             Limiting min, max value to 1e10 to prevent javascript to switch into scientific notation\n             */\n            min: 1e10 * -1,\n            max: 1e10,\n            maxLength: 10,\n            step: 1,\n            required: false,\n            basic: false,\n            circular: false,\n            compact: false,\n            classname_button_minus: \"number_picker_button_minus\",\n            classname_button_plus: \"number_picker_button_plus\",\n            classname_outer_input: \"number_picker\",\n            classname_inner_input: \"number_picker_input\"\n        };\n    },\n    propTypes: {\n        name: React.PropTypes.string.isRequired,\n        id: React.PropTypes.string,\n        value: React.PropTypes.any.isRequired,\n        onChange: React.PropTypes.func.isRequired,\n        placeholder: React.PropTypes.string,\n        min: React.PropTypes.number,\n        max: React.PropTypes.number,\n        step: React.PropTypes.number,\n        maxLength: React.PropTypes.number,\n        required: React.PropTypes.bool,\n        basic: React.PropTypes.bool,\n        circular: React.PropTypes.bool,\n        compact: React.PropTypes.bool\n    },\n    getInitialState: function () {\n        return {\n            touched: false,\n            buffer: {}\n        };\n    },\n    handleAction: function (event, v) {\n        let actionFilter = event.currentTarget.name;\n        let currentValue = event.currentTarget.value.replace(\",\", \".\").replace(/\\D/g, '');\n\n        var setVal = (_.isFinite(parseFloat(this.props.value))) ? parseFloat(this.props.value) : null;\n        let stepSize = (_.isFinite(parseFloat(this.props.step))) ? parseFloat(this.props.step) : 1;\n        switch (actionFilter) {\n            case DECREASE_VALUE:\n                if (this.props.value - stepSize >= this.props.min)\n                    setVal -= stepSize;\n                else\n                    setVal = this.props.min;\n\n                break;\n            case INCREASE_VALUE:\n                if (setVal + stepSize <= this.props.max)\n                    setVal += stepSize;\n                else\n                    setVal = this.props.max;\n\n                break;\n            default:\n                let parsedVal = parseFloat(currentValue);\n                if (currentValue === \"-\")\n                    this.state.buffer = \"-\";\n\n                if (!(parsedVal > this.props.max || parsedVal < this.props.min)) {\n                    setVal = currentValue;\n                }\n\n                break;\n        }\n\n\n        let lastChar = (\"\" + setVal).charAt(setVal.length - 1) || \"\";\n        let returnValue = setVal;\n        let precision = 1000;\n        if (_.isFinite(parseFloat(setVal)))\n            returnValue = Math.floor(parseFloat(setVal) * precision) / precision;\n\n        if (setVal === \"\" || setVal === \"-\" || lastChar === \".\" || lastChar === \",\")\n            returnValue = setVal;\n\n        setTimeout(this.props.onChange, 1, {\n            name: this.props.name,\n            value: returnValue\n        });\n    },\n    validateInput: function (event, v) {\n        let actionFilter = event.target.name;\n        let currentValue = event.target.value;\n\n        var setVal = this.props.value;\n        switch (actionFilter) {\n            case this.props.name:\n                let parsedVal = parseFloat(currentValue);\n                setVal = (_.isFinite(parsedVal)) ? parsedVal : null;\n\n                if (parsedVal > this.props.max)\n                    setVal = this.props.max;\n                break;\n\n            case DECREASE_VALUE:\n            case INCREASE_VALUE:\n            default:\n                break;\n        }\n    },\n    style: {\n        default: {\n            input: {\n                borderRadius: \"0px\",\n                textAlign: \"right\"\n            },\n            buttonLeft: {\n                borderTopRightRadius: \"0px\",\n                borderBottomRightRadius: \"0px\",\n                margin: \"0px\"\n            },\n            buttonRight: {\n                borderTopLeftRadius: \"0px\",\n                borderBottomLeftRadius: \"0px\",\n            }\n        },\n        circular: {\n            input: {\n                textAlign: \"right\"\n            },\n            buttonLeft: {\n                marginRight: \"3.5px\"\n            },\n            buttonRight: {\n                marginLeft: \"3.5px\"\n            }\n        }\n\n    },\n    render: function () {\n        var style = (this.props.circular) ? this.style.circular : this.style.default;\n        var display = {\n            circular: this.props.circular,\n            basic: this.props.basic,\n            compact: this.props.compact\n        };\n        return (<\n                Input className={\n                this.props.classname_outer_input\n            }>\n                <\n                    Button {...display\n                           }\n                           type=\"button\"\n                           icon='minus'\n                           onClick={\n                               this.handleAction\n                           }\n                           name={\n                               DECREASE_VALUE\n                           }\n                           style={\n                               style.buttonLeft\n                           }\n                           disabled={\n                               (this.props.value <= this.props.min)\n                           }\n                           className={\n                               this.props.classname_button_minus\n                           }\n                /> <\n                input type=\"text\"\n                      name={\n                          this.props.name\n                      }\n                      id={\n                          this.props.id\n                      }\n                      min={\n                          this.props.min\n                      }\n                      max={\n                          this.props.max\n                      }\n                      step={\n                          this.props.step\n                      }\n                      className={\n                          this.props.classname_inner_input\n                      }\n                      maxLength={\n                          this.props.maxLength\n                      }\n                      placeholder={\n                          this.props.placeholder\n                      }\n                      required={\n                          this.props.required\n                      }\n                      value={\n                          this.props.value\n                      }\n                      onChange={\n                          this.handleAction\n                      }\n                      onBlur={\n                          this.validateInput\n                      }\n                      style={\n                          style.input\n                      }\n            /> <\n                Button {...display\n                       }\n                       type=\"button\"\n                       icon='plus'\n                       onClick={\n                           this.handleAction\n                       }\n                       name={\n                           INCREASE_VALUE\n                       }\n                       style={\n                           style.buttonRight\n                       }\n                       disabled={\n                           (this.props.value >= this.props.max)\n                       }\n                       className={\n                           this.props.classname_button_plus\n                       }\n            /> </Input>\n        );\n    }\n});\n\nexport default NumberPicker;"]}