{"version":3,"sources":["../src/index.js"],"names":["DECREASE_VALUE","INCREASE_VALUE","NumberPicker","propTypes","name","PropTypes","string","isRequired","id","value","any","onChange","func","placeholder","min","number","max","step","maxLength","required","bool","basic","circular","compact","style","default","input","borderRadius","textAlign","buttonLeft","borderTopRightRadius","borderBottomRightRadius","margin","buttonRight","borderTopLeftRadius","borderBottomLeftRadius","marginRight","marginLeft","handleAction","bind","validateInput","classname_button_minus","classname_button_plus","classname_outer_input","classname_inner_input","touched","buffer","event","v","actionFilter","currentTarget","currentValue","replace","setVal","isFinite","parseFloat","props","stepSize","parsedVal","state","lastChar","charAt","length","returnValue","precision","Math","floor","setTimeout","target","display","Component"],"mappings":"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","file":"index.js","sourcesContent":["import React, {\n    Component\n} from \"react\";\nimport {\n    render\n} from 'react-dom'\nimport _ from \"lodash\";\nimport {\n    Button,\n    Form,\n    Input\n} from \"semantic-ui-react\";\n\n\nexport const DECREASE_VALUE = 'DECREASE_VALUE';\nexport const INCREASE_VALUE = 'INCREASE_VALUE';\n\n/*\n USAGE EXAMPLES:\n <Form.Field inline control={NumberPicker} name={MULTIPLY_INPUT + \".times\"} onChange={this.triggerChange} label=\"Copies to create\" defaultValue={1} min={1} max={999} placeholder=\"Repeat ...\" />\n <Form.Field width=\"8\" control={NumberPicker} compact label=\"compact buttons\" placeholder=\"Enter a number\" defaultValue={6} min={-41} max={45} step={1} />\n <Form.Field width=\"8\" control={NumberPicker} circular label=\"circular buttons\" placeholder=\"Enter a number\" defaultValue={6} min={-41} max={45} step={1} />\n <Form.Field width=\"8\" control={NumberPicker} basic label=\"basic buttons\" placeholder=\"Enter a number\" defaultValue={4} min={-40} max={40} step={2} />\n\n*/\n\n\nclass NumberPicker extends React.Component {\n\n    constructor() {\n        super();\n        this.propTypes = {\n            name: React.PropTypes.string.isRequired,\n            id: React.PropTypes.string,\n            value: React.PropTypes.any.isRequired,\n            onChange: React.PropTypes.func.isRequired,\n            placeholder: React.PropTypes.string,\n            min: React.PropTypes.number,\n            max: React.PropTypes.number,\n            step: React.PropTypes.number,\n            maxLength: React.PropTypes.number,\n            required: React.PropTypes.bool,\n            basic: React.PropTypes.bool,\n            circular: React.PropTypes.bool,\n            compact: React.PropTypes.bool\n        };\n        this.style = {\n            default: {\n                input: {\n                    borderRadius: \"0px\",\n                    textAlign: \"right\"\n                },\n                buttonLeft: {\n                    borderTopRightRadius: \"0px\",\n                    borderBottomRightRadius: \"0px\",\n                    margin: \"0px\"\n                },\n                buttonRight: {\n                    borderTopLeftRadius: \"0px\",\n                    borderBottomLeftRadius: \"0px\",\n                }\n            },\n            circular: {\n                input: {\n                    textAlign: \"right\"\n                },\n                buttonLeft: {\n                    marginRight: \"3.5px\"\n                },\n                buttonRight: {\n                    marginLeft: \"3.5px\"\n                }\n            }\n\n        };\n        this.handleAction = this.handleAction.bind(this);\n        this.validateInput = this.validateInput.bind(this);\n\n    }\n\n\n    getDefaultProps() {\n        return {\n            placeholder: \"Enter a number\",\n            id: \"\",\n            /*\n             Limiting min, max value to 1e10 to prevent javascript to switch into scientific notation\n             */\n            min: 1e10 * -1,\n            max: 1e10,\n            maxLength: 10,\n            step: 1,\n            required: false,\n            basic: false,\n            circular: false,\n            compact: false,\n            classname_button_minus: \"number_picker_button_minus\",\n            classname_button_plus: \"number_picker_button_plus\",\n            classname_outer_input: \"number_picker\",\n            classname_inner_input: \"number_picker_input\"\n        };\n    }\n\n    getInitialState() {\n        return {\n            touched: false,\n            buffer: {}\n        };\n    }\n\n    handleAction(event, v) {\n        let actionFilter = event.currentTarget.name;\n        let currentValue = event.currentTarget.value.replace(\",\", \".\").replace(/\\D/g, '');\n\n        var setVal = (_.isFinite(parseFloat(this.props.value))) ? parseFloat(this.props.value) : null;\n        let stepSize = (_.isFinite(parseFloat(this.props.step))) ? parseFloat(this.props.step) : 1;\n        switch (actionFilter) {\n            case DECREASE_VALUE:\n                if (this.props.value - stepSize >= this.props.min)\n                    setVal -= stepSize;\n                else\n                    setVal = this.props.min;\n\n                break;\n            case INCREASE_VALUE:\n                if (setVal + stepSize <= this.props.max)\n                    setVal += stepSize;\n                else\n                    setVal = this.props.max;\n\n                break;\n            default:\n                let parsedVal = parseFloat(currentValue);\n                if (currentValue === \"-\")\n                    this.state.buffer = \"-\";\n\n                if (!(parsedVal > this.props.max || parsedVal < this.props.min)) {\n                    setVal = currentValue;\n                }\n\n                break;\n        }\n\n\n        let lastChar = (\"\" + setVal).charAt(setVal.length - 1) || \"\";\n        let returnValue = setVal;\n        let precision = 1000;\n        if (_.isFinite(parseFloat(setVal)))\n            returnValue = Math.floor(parseFloat(setVal) * precision) / precision;\n\n        if (setVal === \"\" || setVal === \"-\" || lastChar === \".\" || lastChar === \",\")\n            returnValue = setVal;\n\n        setTimeout(this.props.onChange, 1, {\n            name: this.props.name,\n            value: returnValue\n        });\n    }\n\n    validateInput(event, v) {\n        let actionFilter = event.target.name;\n        let currentValue = event.target.value;\n\n        var setVal = this.props.value;\n        switch (actionFilter) {\n            case this.props.name:\n                let parsedVal = parseFloat(currentValue);\n                setVal = (_.isFinite(parsedVal)) ? parsedVal : null;\n\n                if (parsedVal > this.props.max)\n                    setVal = this.props.max;\n                break;\n\n            case DECREASE_VALUE:\n            case INCREASE_VALUE:\n            default:\n                break;\n        }\n    }\n\n    render() {\n        var style = (this.props.circular) ? this.style.circular : this.style.default;\n        var display = {\n            circular: this.props.circular,\n            basic: this.props.basic,\n            compact: this.props.compact\n        };\n        return (<\n                Input className={\n                this.props.classname_outer_input\n            }>\n                <\n                    Button {...display\n                           }\n                           type=\"button\"\n                           icon='minus'\n                           onClick={\n                               this.handleAction\n                           }\n                           name={\n                               DECREASE_VALUE\n                           }\n                           style={\n                               style.buttonLeft\n                           }\n                           disabled={\n                               (this.props.value <= this.props.min)\n                           }\n                           className={\n                               this.props.classname_button_minus\n                           }\n                /> <\n                input type=\"text\"\n                      name={\n                          this.props.name\n                      }\n                      id={\n                          this.props.id\n                      }\n                      min={\n                          this.props.min\n                      }\n                      max={\n                          this.props.max\n                      }\n                      step={\n                          this.props.step\n                      }\n                      className={\n                          this.props.classname_inner_input\n                      }\n                      maxLength={\n                          this.props.maxLength\n                      }\n                      placeholder={\n                          this.props.placeholder\n                      }\n                      required={\n                          this.props.required\n                      }\n                      value={\n                          this.props.value\n                      }\n                      onChange={\n                          this.handleAction\n                      }\n                      onBlur={\n                          this.validateInput\n                      }\n                      style={\n                          style.input\n                      }\n            /> <\n                Button {...display\n                       }\n                       type=\"button\"\n                       icon='plus'\n                       onClick={\n                           this.handleAction\n                       }\n                       name={\n                           INCREASE_VALUE\n                       }\n                       style={\n                           style.buttonRight\n                       }\n                       disabled={\n                           (this.props.value >= this.props.max)\n                       }\n                       className={\n                           this.props.classname_button_plus\n                       }\n            /> </Input>\n        );\n    }\n}\n\nexport default NumberPicker;"]}